{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","isVendor","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","author","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsVendor","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setAuthor","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.aff49bb9.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      }\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_CREATE_RESET,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      }\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n    <Form onSubmit={submitHandler} inline>\n      <Form.Control\n        type='text'\n        name='q'\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder='Nome do Produto'\n        className='mr-sm-2 ml-sm-5'\n      ></Form.Control>\n      <Button type='submit' className='p-2'>\n        Pesquisa\n      </Button>\n    </Form>\n  )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('cartItems')\n  localStorage.removeItem('shippingAddress')\n  localStorage.removeItem('paymentMethod')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n  document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>Palimpsesto</Navbar.Brand>\n          </LinkContainer>\n\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Route render={({ history }) => <SearchBox history={history} />} />\n\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Perfil</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Login\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n\n              {userInfo && userInfo.isVendor && (\n                <NavDropdown title='Vendor' id='vendormenu'>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Produtos</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n\n              {userInfo && !userInfo.isVendor && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Utilizadores</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Produtos</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Encomenfas</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>UPskill 2022</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='my-3 p-3 rounded'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='div'>\n          <Rating value={product.rating} />\n        </Card.Text>\n\n        <Card.Text as='div'>{`${product.numReviews} Comentários`}</Card.Text>\n\n        <Card.Text as='h3'>€{product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\nimport { logout } from './userActions'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Carousel pause='hover' className='bg-dark'>\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className='carousel-caption'>\n              <h2>\n                {product.name} (€{product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Welcome to Palimpsesto',\n  description: 'We sell the best products for cheap',\n  keywords: 'bookd, buy books, cheap books',\n}\n\nexport default Meta\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to='/' className='btn btn-light'>\n          Regressar\n        </Link>\n      )}\n      {/*<h1>Latest Products</h1>*/}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : ''}\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0)\n      setComment('')\n    }\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(listProductDetails(match.params.id))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n  }, [dispatch, match, product._id, successProductReview])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Regressar\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} Comentários`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: €{product.price}</ListGroup.Item>\n                <ListGroup.Item>Author: {product.author}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>€{product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Adicionar\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Comentários</h2>\n              {product.reviews.length === 0 && (\n                <Message>Sem Comentários</Message>\n              )}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Escreva o seu comentário</h2>\n                  {successProductReview && (\n                    <Message variant='success'>Comentário Enviado</Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Classificação</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Selecione...</option>\n                          <option value='1'>1 - Mediocre</option>\n                          <option value='2'>2 - Suficiente</option>\n                          <option value='3'>3 - Bom</option>\n                          <option value='4'>4 - Muito Bom</option>\n                          <option value='5'>5 - Excelente</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comentário</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Enviar\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Faça <Link to='/login'>Login</Link> para comentar{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Lista de Compras</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Lista de compras vazia <Link to='/'>Regressar</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>€{item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                itens\n              </h2>\n              €\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Continuar Compra\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Iniciar Sessão</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Endereço de eMail</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Indique eMail'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Indique password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Login\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Novo Cliente?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Registar\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Registo</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Nome</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Indique Nome'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Endereço de eMail</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Indique eMail'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Escolher Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Indique password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirmar Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirmar password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Registar\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Tem uma Conta?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Iniciar Sessão\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>Perfil do Utilizador</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Nome</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>eMail</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirme Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Atualizar\n            </Button>\n          </Form>\n        )}\n      </Col>\n      <Col md={9}>\n        <h2>Encomendas</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATA</th>\n                <th>TOTAL</th>\n                <th>PAGO</th>\n                <th>ENTREGUE</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Detalhes\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    })\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Login</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Login</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Envio</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Envio</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Pagamento</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Pagamento</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Encomendar</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Encomendar</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Envio da Encomenda</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Endereço</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>Cidade</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Código Postal</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Pais</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continuar\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress.address) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Método de Pagamento</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n            <Form.Check\n              type='radio'\n              label='Credit Card'\n              id='Credit Card'\n              name='paymentMethod'\n              value='Credit Card'\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continuar\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  if (!cart.shippingAddress.address) {\n    history.push('/shipping')\n  } else if (!cart.paymentMethod) {\n    history.push('/payment')\n  }\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 10)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n      dispatch({ type: USER_DETAILS_RESET })\n      dispatch({ type: ORDER_CREATE_RESET })\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Envio da Encomenda</h2>\n              <p>\n                <strong>Endereço:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Método de Pagamento</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Produtos</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x €{item.price} = €{item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Resumo da Encomenda</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Itens</Col>\n                  <Col>€{cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Envio</Col>\n                  <Col>€{cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Taxas</Col>\n                  <Col>€{cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>€{cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Encomendar\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch, orderId, successPay, successDeliver, order, userInfo, history])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Encomenda {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Envio</h2>\n              <p>\n                <strong>Nome: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>eMail: </strong>{' '}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Endereço:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Entregue em {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Pagamento</h2>\n              <p>\n                <strong>Método: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Pago {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Não Pago</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Produtos</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Lista sem Produtos</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x €{item.price} = €{item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Resumo da Encomenda</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Itens</Col>\n                  <Col>€{order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Envio</Col>\n                  <Col>€{order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Taxas</Col>\n                  <Col>€{order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>€{order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Marcar como Entregue\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, successDelete, userInfo])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Utilizadores</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NOME</th>\n              <th>EMAIL</th>\n              <th>VEND</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isVendor ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isVendor, setIsVendor] = useState(false)\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsVendor(user.isVendor)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isVendor, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Regressar\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='is'>\n              <Form.Check\n                type='checkbox'\n                label='Is Vendor'\n                checked={isVendor}\n                onChange={(e) => setIsVendor(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Produtos</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Criar Produto\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NOME</th>\n                <th>PREÇO</th>\n                <th>CATEGORIA</th>\n                <th>MARCA</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>€{product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [author, setAuthor] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setAuthor(product.author)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/api/upload', formData, config)\n\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        author,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Regressar\n      </Link>\n      <FormContainer>\n        <h1>Editar Produto</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Nome</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Indique o Nome'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='author'>\n              <Form.Label>Autor</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Indique o Autor'\n                value={author}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Preço</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Indique o Preço'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Imagem</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Indique URL'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Marca</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Indique Marca'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Descrição</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Descrição do Produto'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Atualizar\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Encomendas</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>UTILIZADOR</th>\n              <th>DATA</th>\n              <th>TOTAL</th>\n              <th>PAGO</th>\n              <th>ENTREGUE</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Detahes\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}